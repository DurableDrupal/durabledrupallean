# Chapter 1 - First Lean DurableDrupalDistro Project
 
To find out what DurableDrupal Lean is all about, let's dive right in and work through a project together using the DurableDrupalDistro. We'll show how the team works together in full parallel cross-collaboration from start to finish. As always there will be some room for improvement, and this will be caught in the process retrospective at the end of the chapter. We will then drill down in later chapters in "just enough" detail as we work through a second and more substantive real life project.

## First meeting with the client
I met with Stuart on Skype. He told me about a neighborhood non-profit that runs programs for youth in the community. They've had a webmaster who managed the content on their site for them, but he seems to have disappeared and they've lost access to their old stuff. Actually they've been wanting to re-do their site for some time, so they have some ideas, but now they're stuck. They want to be able to manage their content without depending on anyone else for that.
Stakeholder detection.
Existing solution survey.
I hit him with Problem, Market, Product just to get initial feedback, and explained about us needing to postpone jumping in and talking right away about design and functionality ideas in favor of first clearly understanding current pain points and problems, and understanding what the organization's valued outcomes might be. And that afterwards we would all brainstorm about designs and functionality that could be tested out to see if they might achieve those objectives. As usual it was pretty hard to sell this point since clients always want to talk about widgets, colors and what blocks should be handy to click on right away, but I think we were all on the same page, and I came away from the meeting with some good notes.
The good news was that Stewart agreed to be readily available for ongoing feedback and understood about our methods of continuous delivery.
TODO: What the client can understand in a first meeting is what fits into this chapter. So, simple explanations over buzz words.

## Forming the team

It was a minimum team but had to have the following areas covered (with some team members covering more than one role):

* Product owner
* Process coach
* Software Architect
* User experience/User interface designer 
* Graphic designer
* Multimedia designer
* Structured Content specialist/Information architect
* Front-end developer
* Back-end developer
* Marketing specialist
* Content creator/Copywriter
* DevOps specialist

Notice the absence of Project Manager. It's important to escape the rockstar fantasy and indispensable hero syndrome. It's the team the whole team and nothing but the team. It just works.

The exact definitiion of each of the roles will become apparent by the end of this chapter and throughout the book. If you need an abstract definition, see [Appendix 2](#).

## Single Theme project encompassing 3 Sprints aimed at MVP

I planned for a Lean process with the team, blending Lean with Scrum with the Theme approach discussed in Gothelf which avoids output handoff, deliverables and waterfall in favor of everyone working in cross-collaboration based on ... the whole team working on the same thing at the same time (TODO: redact). A single set of 3 2-week sprints was going to be enough to deliver and test an MVP after initial prototypes and a first MVP had been tested and corrected in the first two sprints.

### Sprint 1

#### Kick-off Assumptions Declaration and Design Studio meeting

* Problem statements
* Assumption declarations
* Market and Product preliminary hypotheses
* 2-day break for GOOB and Problem & Market Validation

#### GOOB and Validation

#### Main Assumptions Declaration and Design Studio meeting with feedback

* Complete hypotheses cycle
* Design studio
* Framework discussion (see Appendix 1)

#### Iteration Planning Meetings

* User Stories
* Backlog generation for Sprint
* Planning for interspersed usability and prototype/MVP product value testing including two cross-collaboration meetings

#### Sprint 1

* IPM as above, and
  * Selection of DurableDrupalDistro based on discussion in Appendix 1
  * Provisioning and Team workflow presentation (see Appendix 2)
* Provisioning for office, server, individual team members
* Workflow for jobs of work integration and continuous build
* Backlog
* Testing
* Conversations
* Guaranteeing creative time for all
* Prototype delivered and tested

#### Sprint 2

* IPM as above
* Backlog
* Testing
* Conversations

#### Sprint 3

* IPM as above
* Backlog
* Testing
* Conversations
* Delivery
* Testing
* Retrospective meeting

TODO work in artifacts (3rd appendix?) plus tools from both books (Klein's 9 tools, etc.)

TODO just do it





----- TODO rework the following on the basis of our actual Lean process followed for the chapter project.


## Exactly how we build this thing

* Getting the team together
  * Provisioning
  * See Appendix 1 xxxxx on why the team chose DurableDrupalDistro as the framework of choice for this project. 
* First planning session
  * Value hypotheses
  * Testing
* Second planning session 
  * MVP Specification based on "what we now know"
  * Establish initial sprint backlog
* Provisioning for development and staging
  * Tailor distro to project
  * Provision team with local VMs on their laptops
* First user story
  * Design studio
  * Estimates
  * Acceptance test
* Successive user stories
* Sprint Acceptance
* Retrospective



## Getting the team together

## Kickoff session

**See https://github.com/victorkane/lit-drupal-lean/issues/3 and refactory this whole outline accordingly**

### Value hypotheses

### Testing

## Second planning session 

### MVP Specification based on "what we now know"

### Establish initial sprint backlog

## Provisioning for development and staging

### Tailor distro to project

### Provision team with local VMs on their laptops

## First user story

### Design studio

### Estimates

### Acceptance test

## Successive user stories

## Sprint Acceptance

## Retrospective (or Agile is the new Waterfall)


So in this chapter we ran with the DurableDrupalDistro, built and delivered our project and installed in on our maintenance stack. After which we complied with the solemn retrospective and reviewed our list of lessons learned.

For the rest of the book, we are going to drill down into the different moments of a more challenging project, as we learn how to overcome agile alone as the new waterfall, incorporating the painful lessons learned by the start-ups, as we adopt the lean process. Turn the page and find out what it's gonna be...