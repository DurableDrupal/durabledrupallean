# Chapter 1 - First Lean DurableDrupalDistro Project
 
To find out what DurableDrupal Lean is all about, let's dive right in and work through a project together using the DurableDrupalDistro. We'll show how the team works together in full parallel cross-collaboration from start to finish. As always there will be some room for improvement, and this will be caught in the process retrospective at the end of the chapter. We will then drill down in later chapters in "just enough" detail as we work through a second and more substantive real life project.

## First meeting with the client
I met with Stuart on Skype. He told me about a neighborhood non-profit that runs programs for youth in the community. They've had a webmaster who managed the content on their site for them, but he seems to have disappeared and they've lost access to their old stuff. Actually they've been wanting to re-do their site for some time, so they have some ideas, but now they're stuck. They want to be able to manage their content without depending on anyone else for that.
Stakeholder detection.
Existing solution survey.
I hit him with Problem, Market, Product just to get initial feedback, and we wrote an initial hypothesis.

## Forming the team

It was a minimum team but had to have:

* Front-end developer
* Back-end developer
* Graphic designer
* Usability person
* TODO complete from UX books where they list the roles

## Single Theme project encompassing 3 Sprints aimed at MVP

I planned for a Lean process with the team, blending Lean with Scrum with the Theme approach discussed in Gothelf which avoids output handoff, deliverables and waterfall in favor of everyone working in cross-collaboration based on ... the whole team working on the same thing at the same time (TODO: redact). A single set of 3 2-week sprints was going to be enough to deliver and test an MVP after initial prototypes and a first MVP had been tested and corrected in the first two sprints.

### Sprint 1

#### Kick-off Assumptions Declaration and Design Studio meeting

* Problem statements
* Assumption declarations
* Market and Product preliminary hypotheses
* Break for GOOB and Problem & Market Validation

#### GOOB and Validation

#### Main Assumptions Declaration and Design Studio meeting with feedback

* Complete hypotheses cycle
* Design studio
* Framework discussion (see Appendix 1)

#### Iteration Planning Meetings

* User Stories
* 9 tools
* Backlog generation for Sprint
* Planning for interspersed usability and prototype/MVP product value testing including two cross-collaboration meetings

#### Sprint 1

* IPM
  * Selection of DurableDrupalDistro based on discussion in Appendix 1
  * Provisioning and Team workflow presentation (see Appendix 2)
* Provisioning for office, server, individual team members
* Workflow for jobs of work integration and continuous build
* Backlog
* Testing
* Conversations
* Guaranteeing creative time for all
* Prototype delivered and tested

#### Sprint 2

* IPM
* Backlog
* Testing
* Conversations

#### Sprint 3

* Backlog
* Testing
* Conversations
* Delivery
* Testing
* Retrospective meeting

TODO work in artifacts (3rd appendix?) plus Klein's 9 tools, etc.






----- TODO rework the following on the basis of our actual Lean process followed for the chapter project.


## Exactly how we build this thing

* Getting the team together
  * Provisioning
  * See Appendix 1 xxxxx on why the team chose DurableDrupalDistro as the framework of choice for this project. 
* First planning session
  * Value hypotheses
  * Testing
* Second planning session 
  * MVP Specification based on "what we now know"
  * Establish initial sprint backlog
* Provisioning for development and staging
  * Tailor distro to project
  * Provision team with local VMs on their laptops
* First user story
  * Design studio
  * Estimates
  * Acceptance test
* Successive user stories
* Sprint Acceptance
* Retrospective



## Getting the team together

## Kickoff session

**See https://github.com/victorkane/lit-drupal-lean/issues/3 and refactory this whole outline accordingly**

### Value hypotheses

### Testing

## Second planning session 

### MVP Specification based on "what we now know"

### Establish initial sprint backlog

## Provisioning for development and staging

### Tailor distro to project

### Provision team with local VMs on their laptops

## First user story

### Design studio

### Estimates

### Acceptance test

## Successive user stories

## Sprint Acceptance

## Retrospective (or Agile is the new Waterfall)


So in this chapter we ran with the DurableDrupalDistro, built and delivered our project and installed in on our maintenance stack. After which we complied with the solemn retrospective and reviewed our list of lessons learned.

For the rest of the book, we are going to drill down into the different moments of a more challenging project, as we learn how to overcome agile alone as the new waterfall, incorporating the painful lessons learned by the start-ups, as we adopt the lean process. Turn the page and find out what it's gonna be...