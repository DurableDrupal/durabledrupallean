# Introduction

## Tool up for solid web apps now and maintain them for years with a powerful Drupal distro

No-one wants websites any more. This book is for web app development teams, called upon by their clients to move their business model to the internet. Because that's what's going on.

This book will empower you and your team, no matter what your level of expertise, to simplify the building of durable solutions for your clients' real needs, and to facilitate the maintenance these solutions will be crying out for from the get go.

You will be building for yourselves a lean process factory to output durable solutions that can be maintained for years to come.

Because the real costs are all about maintenance and constant change:

* First in the minimum of 40% in changes that will be requested in the weeks or months of development.
* Secondly, in the feature and usability requests the solution will have to assimilate in order to maintain its value over time.
* Thirdly in the security threats that will have to be dealt with in as fully an automated way as possible.
* Fourthly in the architectural and deployment changes that will be required over the years, in the struggle to scale with growth and cut costs with new technological breakthroughs.

Because it's not about the "single click site generation" and easy scaffolding any decent framework or "hosting" solution offers. We'll soon see how to fire up a framework in seconds, in just a few clicks, but the devil is in how we empower ourselves with a process that is going to facilitate, stabilize and simplify our work in the face of constant change we need to flow with.

We're here for the long haul.

And we're using [Drupal](https://www.drupal.org/) now.

So here's what we'll be doing:

* Chapter 1: Making sure we really want to use Drupal now
  * This is what we need and we need it now
  * Should we use WordPress instead of Drupal?
  * Should we build from scratch with one of the exciting new frameworks?
  * Reasons for deciding on Drupal 7 as the best current choice
    * What about Drupal 8?
    * What about Backdrop?
  * Presenting DurableDrupalDistro: grab it, fork it, tailor it, maintain it!

* Chapter 2: Setting up just enough shop to deliver our first web app
  * Every team member has their own dev environment
    * On their laptop, in lots of simple ways
    * On a VPS
    * On Pantheon
    * On Amazon
  * What the client needs
  * Fork the distro and make our own
  * User stories and doing it with agile
  * Delivery as client empowerment
  * Post mortem: We did it! But...
    * Agile is the new waterfall (pixel perfect design -> "implementation")
    * Team couldn't really work in parrallel
    * Client took delivery of a monolithic blob he wasn't sure how to use
* Chapter 3: Agile is the new waterfall - we need Lean!
  * New project!
  * Value hypotheses
  * Design studio for nerds... and for the client too
  * Getting the team working in parrallel
* Chapter 4: Grabbing the legacy content
* Chapter 5: Functional prototypes
* Chapter 6: Candidate architecture
* Chapter 7: Build the recursive MVP of MVP's
  * Every user story is an MVP
  * No project is ever anything more than an MVP
* Chapter 8: Go team test team go go go
* Chapter 9: Build, deploy, maintain
  * Rinse and repeat over "development"

But more than a book this is a community of teams. Dive in!
